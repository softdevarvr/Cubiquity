// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/CubiquityPluginPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "Cubiquity.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Cubiquity() {}
	void UCubiquityMaterialSet::StaticRegisterNativesUCubiquityMaterialSet()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCubiquityMaterialSet::StaticClass(), "getMaterial",(Native)&UCubiquityMaterialSet::execgetMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UCubiquityMaterialSet::StaticClass(), "MakeCubiquityMaterialSet",(Native)&UCubiquityMaterialSet::execMakeCubiquityMaterialSet);
		FNativeFunctionRegistrar::RegisterFunction(UCubiquityMaterialSet::StaticClass(), "setMaterial",(Native)&UCubiquityMaterialSet::execsetMaterial);
	}
	IMPLEMENT_CLASS(UCubiquityMaterialSet, 3527305337);
	void UCubiquityMeshComponent::StaticRegisterNativesUCubiquityMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCubiquityMeshComponent::StaticClass(), "ClearMeshTriangles",(Native)&UCubiquityMeshComponent::execClearMeshTriangles);
	}
	IMPLEMENT_CLASS(UCubiquityMeshComponent, 3416823670);
	void ACubiquityOctreeNode::StaticRegisterNativesACubiquityOctreeNode()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityOctreeNode::StaticClass(), "getVolume",(Native)&ACubiquityOctreeNode::execgetVolume);
	}
	IMPLEMENT_CLASS(ACubiquityOctreeNode, 2293553758);
	void UCubiquityUpdateComponent::StaticRegisterNativesUCubiquityUpdateComponent()
	{
	}
	IMPLEMENT_CLASS(UCubiquityUpdateComponent, 2296285155);
	void ACubiquityVolume::StaticRegisterNativesACubiquityVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "commitChanges",(Native)&ACubiquityVolume::execcommitChanges);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "discardChanges",(Native)&ACubiquityVolume::execdiscardChanges);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "updateMaterial",(Native)&ACubiquityVolume::execupdateMaterial);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "volumeDirectionToWorldDirection",(Native)&ACubiquityVolume::execvolumeDirectionToWorldDirection);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "volumePositionToWorldPosition",(Native)&ACubiquityVolume::execvolumePositionToWorldPosition);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "worldDirectionToVolumeDirection",(Native)&ACubiquityVolume::execworldDirectionToVolumeDirection);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityVolume::StaticClass(), "worldPositionToVolumePosition",(Native)&ACubiquityVolume::execworldPositionToVolumePosition);
	}
	IMPLEMENT_CLASS(ACubiquityVolume, 3907312492);
	void ACubiquityColoredCubesVolume::StaticRegisterNativesACubiquityColoredCubesVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityColoredCubesVolume::StaticClass(), "getVoxel",(Native)&ACubiquityColoredCubesVolume::execgetVoxel);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityColoredCubesVolume::StaticClass(), "pickFirstSolidVoxel",(Native)&ACubiquityColoredCubesVolume::execpickFirstSolidVoxel);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityColoredCubesVolume::StaticClass(), "pickLastEmptyVoxel",(Native)&ACubiquityColoredCubesVolume::execpickLastEmptyVoxel);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityColoredCubesVolume::StaticClass(), "setVoxel",(Native)&ACubiquityColoredCubesVolume::execsetVoxel);
	}
	IMPLEMENT_CLASS(ACubiquityColoredCubesVolume, 3720246994);
	void ACubiquityTerrainVolume::StaticRegisterNativesACubiquityTerrainVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityTerrainVolume::StaticClass(), "getVoxel",(Native)&ACubiquityTerrainVolume::execgetVoxel);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityTerrainVolume::StaticClass(), "pickSurface",(Native)&ACubiquityTerrainVolume::execpickSurface);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityTerrainVolume::StaticClass(), "sculptTerrain",(Native)&ACubiquityTerrainVolume::execsculptTerrain);
		FNativeFunctionRegistrar::RegisterFunction(ACubiquityTerrainVolume::StaticClass(), "setVoxel",(Native)&ACubiquityTerrainVolume::execsetVoxel);
	}
	IMPLEMENT_CLASS(ACubiquityTerrainVolume, 409154057);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UBodySetup_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_CollisionDataProvider_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();

	CUBIQUITY_API class UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_getMaterial();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_MakeCubiquityMaterialSet();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_setMaterial();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityMaterialSet_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityMaterialSet();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_UCubiquityMeshComponent_ClearMeshTriangles();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityMeshComponent_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityMeshComponent();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityOctreeNode_getVolume();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityOctreeNode_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityOctreeNode();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityUpdateComponent_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_UCubiquityUpdateComponent();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_commitChanges();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_discardChanges();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_updateMaterial();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_volumeDirectionToWorldDirection();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_volumePositionToWorldPosition();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_worldDirectionToVolumeDirection();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityVolume_worldPositionToVolumePosition();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityVolume_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityVolume();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_getVoxel();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickFirstSolidVoxel();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickLastEmptyVoxel();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_setVoxel();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityColoredCubesVolume_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityColoredCubesVolume();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_getVoxel();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_pickSurface();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_sculptTerrain();
	CUBIQUITY_API class UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_setVoxel();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityTerrainVolume_NoRegister();
	CUBIQUITY_API class UClass* Z_Construct_UClass_ACubiquityTerrainVolume();
	CUBIQUITY_API class UPackage* Z_Construct_UPackage__Script_Cubiquity();
	UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_getMaterial()
	{
		struct CubiquityMaterialSet_eventgetMaterial_Parms
		{
			uint8 index;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UCubiquityMaterialSet();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(CubiquityMaterialSet_eventgetMaterial_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityMaterialSet_eventgetMaterial_Parms), 0x0010000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(index, CubiquityMaterialSet_eventgetMaterial_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMaterialSet.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_MakeCubiquityMaterialSet()
	{
		struct CubiquityMaterialSet_eventMakeCubiquityMaterialSet_Parms
		{
			UCubiquityMaterialSet* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UCubiquityMaterialSet();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeCubiquityMaterialSet"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(CubiquityMaterialSet_eventMakeCubiquityMaterialSet_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityMaterialSet_eventMakeCubiquityMaterialSet_Parms), 0x0010000000000580, Z_Construct_UClass_UCubiquityMaterialSet_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMaterialSet.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UCubiquityMaterialSet_setMaterial()
	{
		struct CubiquityMaterialSet_eventsetMaterial_Parms
		{
			uint8 index;
			uint8 value;
		};
		UObject* Outer=Z_Construct_UClass_UCubiquityMaterialSet();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(CubiquityMaterialSet_eventsetMaterial_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(value, CubiquityMaterialSet_eventsetMaterial_Parms), 0x0010000000000080);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(index, CubiquityMaterialSet_eventsetMaterial_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMaterialSet.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UCubiquityMaterialSet_NoRegister()
	{
		return UCubiquityMaterialSet::StaticClass();
	}
	UClass* Z_Construct_UClass_UCubiquityMaterialSet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = UCubiquityMaterialSet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UCubiquityMaterialSet_getMaterial());
				OuterClass->LinkChild(Z_Construct_UFunction_UCubiquityMaterialSet_MakeCubiquityMaterialSet());
				OuterClass->LinkChild(Z_Construct_UFunction_UCubiquityMaterialSet_setMaterial());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UCubiquityMaterialSet_getMaterial(), "getMaterial"); // 1803353873
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UCubiquityMaterialSet_MakeCubiquityMaterialSet(), "MakeCubiquityMaterialSet"); // 1638890599
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UCubiquityMaterialSet_setMaterial(), "setMaterial"); // 2634739603
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityMaterialSet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMaterialSet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCubiquityMaterialSet(Z_Construct_UClass_UCubiquityMaterialSet, &UCubiquityMaterialSet::StaticClass, TEXT("UCubiquityMaterialSet"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCubiquityMaterialSet);
	UFunction* Z_Construct_UFunction_UCubiquityMeshComponent_ClearMeshTriangles()
	{
		struct CubiquityMeshComponent_eventClearMeshTriangles_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UCubiquityMeshComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearMeshTriangles"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(CubiquityMeshComponent_eventClearMeshTriangles_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, CubiquityMeshComponent_eventClearMeshTriangles_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, CubiquityMeshComponent_eventClearMeshTriangles_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, CubiquityMeshComponent_eventClearMeshTriangles_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Components|GeneratedMesh"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMeshComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UCubiquityMeshComponent_NoRegister()
	{
		return UCubiquityMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UCubiquityMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMeshComponent();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = UCubiquityMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A01080;

				OuterClass->LinkChild(Z_Construct_UFunction_UCubiquityMeshComponent_ClearMeshTriangles());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ModelBodySetup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModelBodySetup"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ModelBodySetup, UCubiquityMeshComponent), 0x0010000000000014, Z_Construct_UClass_UBodySetup_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UCubiquityMeshComponent_ClearMeshTriangles(), "ClearMeshTriangles"); // 3058819203
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UInterface_CollisionDataProvider_NoRegister(), VTABLE_OFFSET(UCubiquityMeshComponent, IInterface_CollisionDataProvider), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Rendering"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Mobility Trigger"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Component that allows you to specify custom triangle mesh geometry"));
				MetaData->SetValue(NewProp_ModelBodySetup, TEXT("Category"), TEXT("Collision"));
				MetaData->SetValue(NewProp_ModelBodySetup, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityMeshComponent.h"));
				MetaData->SetValue(NewProp_ModelBodySetup, TEXT("ToolTip"), TEXT("Description of collision"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCubiquityMeshComponent(Z_Construct_UClass_UCubiquityMeshComponent, &UCubiquityMeshComponent::StaticClass, TEXT("UCubiquityMeshComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCubiquityMeshComponent);
	UFunction* Z_Construct_UFunction_ACubiquityOctreeNode_getVolume()
	{
		struct CubiquityOctreeNode_eventgetVolume_Parms
		{
			ACubiquityVolume* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityOctreeNode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(CubiquityOctreeNode_eventgetVolume_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityOctreeNode_eventgetVolume_Parms), 0x0010000000000580, Z_Construct_UClass_ACubiquityVolume_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityOctreeNode.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACubiquityOctreeNode_NoRegister()
	{
		return ACubiquityOctreeNode::StaticClass();
	}
	UClass* Z_Construct_UClass_ACubiquityOctreeNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = ACubiquityOctreeNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800288;

				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityOctreeNode_getVolume());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityOctreeNode_getVolume(), "getVolume"); // 4165323031
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityOctreeNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityOctreeNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This is marked transient so that Cubiquity can recreate on level loading\nThese objects can be created and destroyed by Cubiquity as the structure of the octree changes."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACubiquityOctreeNode(Z_Construct_UClass_ACubiquityOctreeNode, &ACubiquityOctreeNode::StaticClass, TEXT("ACubiquityOctreeNode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACubiquityOctreeNode);
	UClass* Z_Construct_UClass_UCubiquityUpdateComponent_NoRegister()
	{
		return UCubiquityUpdateComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UCubiquityUpdateComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneComponent();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = UCubiquityUpdateComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Trigger PhysicsVolume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityUpdateComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityUpdateComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("The whole purpose of this class is to allow the volume actor to process updates while in the editor\nIts TickComponent function simply calls its owner's Tick function"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCubiquityUpdateComponent(Z_Construct_UClass_UCubiquityUpdateComponent, &UCubiquityUpdateComponent::StaticClass, TEXT("UCubiquityUpdateComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCubiquityUpdateComponent);
	UFunction* Z_Construct_UFunction_ACubiquityVolume_commitChanges()
	{
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("commitChanges"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This saves the temporary changes made to the volume in memory to the backing store"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_discardChanges()
	{
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("discardChanges"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This discards the temporary changes made to the volume"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_updateMaterial()
	{
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("updateMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This should be called after setting the material to propgate the change"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_volumeDirectionToWorldDirection()
	{
		struct CubiquityVolume_eventvolumeDirectionToWorldDirection_Parms
		{
			FVector localDirection;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("volumeDirectionToWorldDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(CubiquityVolume_eventvolumeDirectionToWorldDirection_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityVolume_eventvolumeDirectionToWorldDirection_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localDirection, CubiquityVolume_eventvolumeDirectionToWorldDirection_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convert fom volume-space to world-space"));
			MetaData->SetValue(NewProp_localDirection, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_volumePositionToWorldPosition()
	{
		struct CubiquityVolume_eventvolumePositionToWorldPosition_Parms
		{
			FVector localPosition;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("volumePositionToWorldPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(CubiquityVolume_eventvolumePositionToWorldPosition_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityVolume_eventvolumePositionToWorldPosition_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityVolume_eventvolumePositionToWorldPosition_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convert fom volume-space to world-space"));
			MetaData->SetValue(NewProp_localPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_worldDirectionToVolumeDirection()
	{
		struct CubiquityVolume_eventworldDirectionToVolumeDirection_Parms
		{
			FVector worldDirection;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("worldDirectionToVolumeDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(CubiquityVolume_eventworldDirectionToVolumeDirection_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityVolume_eventworldDirectionToVolumeDirection_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_worldDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(worldDirection, CubiquityVolume_eventworldDirectionToVolumeDirection_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convert fom world-space to volume-space"));
			MetaData->SetValue(NewProp_worldDirection, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityVolume_worldPositionToVolumePosition()
	{
		struct CubiquityVolume_eventworldPositionToVolumePosition_Parms
		{
			FVector worldPosition;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("worldPositionToVolumePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(CubiquityVolume_eventworldPositionToVolumePosition_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityVolume_eventworldPositionToVolumePosition_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_worldPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(worldPosition, CubiquityVolume_eventworldPositionToVolumePosition_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convert fom world-space to volume-space"));
			MetaData->SetValue(NewProp_worldPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACubiquityVolume_NoRegister()
	{
		return ACubiquityVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ACubiquityVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = ACubiquityVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800081;

				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_commitChanges());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_discardChanges());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_updateMaterial());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_volumeDirectionToWorldDirection());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_volumePositionToWorldPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_worldDirectionToVolumeDirection());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityVolume_worldPositionToVolumePosition());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_lodThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("lodThreshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lodThreshold, ACubiquityVolume), 0x0010000000000001);
				UProperty* NewProp_volumeFileName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("volumeFileName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(volumeFileName, ACubiquityVolume), 0x0010000000000001);
				UProperty* NewProp_Material = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Material"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Material, ACubiquityVolume), 0x0010000000000005, Z_Construct_UClass_UMaterialInterface_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_commitChanges(), "commitChanges"); // 3074083829
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_discardChanges(), "discardChanges"); // 2532437750
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_updateMaterial(), "updateMaterial"); // 917391016
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_volumeDirectionToWorldDirection(), "volumeDirectionToWorldDirection"); // 2395949147
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_volumePositionToWorldPosition(), "volumePositionToWorldPosition"); // 633742995
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_worldDirectionToVolumeDirection(), "worldDirectionToVolumeDirection"); // 1580597938
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityVolume_worldPositionToVolumePosition(), "worldPositionToVolumePosition"); // 3465666
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A CubiquityVolume is the base class for the volume actors in Cubiquity.\nIt is an abstact class with derived classes for the types of terrain supported.\nA CubiquityVolume has no visual representation in the world but instead holds an ACubiquityOctreeNode tree which have visual components."));
				MetaData->SetValue(NewProp_lodThreshold, TEXT("Category"), TEXT("Cubiquity"));
				MetaData->SetValue(NewProp_lodThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
				MetaData->SetValue(NewProp_lodThreshold, TEXT("ToolTip"), TEXT("How aggressive the LOD scaling is. Low numbers are better quality. Usually between 0.5 and 2.0"));
				MetaData->SetValue(NewProp_volumeFileName, TEXT("Category"), TEXT("Cubiquity"));
				MetaData->SetValue(NewProp_volumeFileName, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
				MetaData->SetValue(NewProp_volumeFileName, TEXT("ToolTip"), TEXT("The filename on disk to load from or save to"));
				MetaData->SetValue(NewProp_Material, TEXT("Category"), TEXT("Cubiquity"));
				MetaData->SetValue(NewProp_Material, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityVolume.h"));
				MetaData->SetValue(NewProp_Material, TEXT("ToolTip"), TEXT("The material applied to the terrain"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACubiquityVolume(Z_Construct_UClass_ACubiquityVolume, &ACubiquityVolume::StaticClass, TEXT("ACubiquityVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACubiquityVolume);
	UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_getVoxel()
	{
		struct CubiquityColoredCubesVolume_eventgetVoxel_Parms
		{
			FVector localPosition;
			FColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityColoredCubesVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(CubiquityColoredCubesVolume_eventgetVoxel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityColoredCubesVolume_eventgetVoxel_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FColor());
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityColoredCubesVolume_eventgetVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityColoredCubesVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value of a voxel in the terrain"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickFirstSolidVoxel()
	{
		struct CubiquityColoredCubesVolume_eventpickFirstSolidVoxel_Parms
		{
			FVector localStartPosition;
			FVector localDirection;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityColoredCubesVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("pickFirstSolidVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(CubiquityColoredCubesVolume_eventpickFirstSolidVoxel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityColoredCubesVolume_eventpickFirstSolidVoxel_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localDirection, CubiquityColoredCubesVolume_eventpickFirstSolidVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localStartPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localStartPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localStartPosition, CubiquityColoredCubesVolume_eventpickFirstSolidVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityColoredCubesVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("//Along a raycast, get the position of the first non-empty voxel\n       UFUNCTION(BlueprintCallable, BlueprintPure, Category = \"Cubiquity\")\n       void pickFirstSolidVoxel(const FVector& localStartPosition, const FVector& localDirection, bool& success, FVector& hitLocation) const;\n\n       //Along a raycast, get the position of the last empty voxel\n       UFUNCTION(BlueprintCallable, BlueprintPure, Category = \"Cubiquity\")\n       void pickLastEmptyVoxel(const FVector& localStartPosition, const FVector& localDirection, bool& success, FVector& hitLocation) const;//Along a raycast, get the position of the first non-empty voxel"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickLastEmptyVoxel()
	{
		struct CubiquityColoredCubesVolume_eventpickLastEmptyVoxel_Parms
		{
			FVector localStartPosition;
			FVector localDirection;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityColoredCubesVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("pickLastEmptyVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(CubiquityColoredCubesVolume_eventpickLastEmptyVoxel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityColoredCubesVolume_eventpickLastEmptyVoxel_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localDirection, CubiquityColoredCubesVolume_eventpickLastEmptyVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localStartPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localStartPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localStartPosition, CubiquityColoredCubesVolume_eventpickLastEmptyVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityColoredCubesVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Along a raycast, get the position of the last empty voxel"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityColoredCubesVolume_setVoxel()
	{
		struct CubiquityColoredCubesVolume_eventsetVoxel_Parms
		{
			FVector localPosition;
			FColor newColor;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityColoredCubesVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(CubiquityColoredCubesVolume_eventsetVoxel_Parms));
			UProperty* NewProp_newColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newColor, CubiquityColoredCubesVolume_eventsetVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FColor());
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityColoredCubesVolume_eventsetVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityColoredCubesVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set a voxel in the volume to a specific value"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACubiquityColoredCubesVolume_NoRegister()
	{
		return ACubiquityColoredCubesVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ACubiquityColoredCubesVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACubiquityVolume();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = ACubiquityColoredCubesVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityColoredCubesVolume_getVoxel());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickFirstSolidVoxel());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickLastEmptyVoxel());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityColoredCubesVolume_setVoxel());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityColoredCubesVolume_getVoxel(), "getVoxel"); // 1720818688
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickFirstSolidVoxel(), "pickFirstSolidVoxel"); // 519171273
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityColoredCubesVolume_pickLastEmptyVoxel(), "pickLastEmptyVoxel"); // 3887003879
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityColoredCubesVolume_setVoxel(), "setVoxel"); // 507514267
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityColoredCubesVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityColoredCubesVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A voxel terrain object that displays as cubes"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACubiquityColoredCubesVolume(Z_Construct_UClass_ACubiquityColoredCubesVolume, &ACubiquityColoredCubesVolume::StaticClass, TEXT("ACubiquityColoredCubesVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACubiquityColoredCubesVolume);
	UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_getVoxel()
	{
		struct CubiquityTerrainVolume_eventgetVoxel_Parms
		{
			FVector localPosition;
			UCubiquityMaterialSet* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityTerrainVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(CubiquityTerrainVolume_eventgetVoxel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityTerrainVolume_eventgetVoxel_Parms), 0x0010000000000580, Z_Construct_UClass_UCubiquityMaterialSet_NoRegister());
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityTerrainVolume_eventgetVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityTerrainVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value of a voxel in the terrain"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_pickSurface()
	{
		struct CubiquityTerrainVolume_eventpickSurface_Parms
		{
			FVector localStartPosition;
			FVector localDirection;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityTerrainVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("pickSurface"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(CubiquityTerrainVolume_eventpickSurface_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, CubiquityTerrainVolume_eventpickSurface_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localDirection, CubiquityTerrainVolume_eventpickSurface_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_localStartPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localStartPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localStartPosition, CubiquityTerrainVolume_eventpickSurface_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityTerrainVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\\param localStartPosition the volume-space position of the start of the raycast\n\\param localDirection the volume-space direction of the raycast\n\\return the volume-space position of the raycast hit"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_sculptTerrain()
	{
		struct CubiquityTerrainVolume_eventsculptTerrain_Parms
		{
			FVector localPosition;
			float innerRadius;
			float outerRadius;
			float opacity;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityTerrainVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("sculptTerrain"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(CubiquityTerrainVolume_eventsculptTerrain_Parms));
			UProperty* NewProp_opacity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("opacity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(opacity, CubiquityTerrainVolume_eventsculptTerrain_Parms), 0x0010000000000080);
			UProperty* NewProp_outerRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outerRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(outerRadius, CubiquityTerrainVolume_eventsculptTerrain_Parms), 0x0010000000000080);
			UProperty* NewProp_innerRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("innerRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(innerRadius, CubiquityTerrainVolume_eventsculptTerrain_Parms), 0x0010000000000080);
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityTerrainVolume_eventsculptTerrain_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_innerRadius"), TEXT("0.500000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_opacity"), TEXT("0.800000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_outerRadius"), TEXT("2.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityTerrainVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\\param localPosition the volume-space position of the position to sculpt\n\\param innerRadius the volume-space size of the solid part of the brush\n\\param outerRadius the volume-space radius of the fall-off region of the brush\n\\param opacity"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACubiquityTerrainVolume_setVoxel()
	{
		struct CubiquityTerrainVolume_eventsetVoxel_Parms
		{
			FVector localPosition;
			const UCubiquityMaterialSet* materialSet;
		};
		UObject* Outer=Z_Construct_UClass_ACubiquityTerrainVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setVoxel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(CubiquityTerrainVolume_eventsetVoxel_Parms));
			UProperty* NewProp_materialSet = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("materialSet"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(materialSet, CubiquityTerrainVolume_eventsetVoxel_Parms), 0x0010000000000082, Z_Construct_UClass_UCubiquityMaterialSet_NoRegister());
			UProperty* NewProp_localPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("localPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(localPosition, CubiquityTerrainVolume_eventsetVoxel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Cubiquity"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityTerrainVolume.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set a voxel in the volume to a specific value"));
			MetaData->SetValue(NewProp_materialSet, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACubiquityTerrainVolume_NoRegister()
	{
		return ACubiquityTerrainVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ACubiquityTerrainVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACubiquityVolume();
			Z_Construct_UPackage__Script_Cubiquity();
			OuterClass = ACubiquityTerrainVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityTerrainVolume_getVoxel());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityTerrainVolume_pickSurface());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityTerrainVolume_sculptTerrain());
				OuterClass->LinkChild(Z_Construct_UFunction_ACubiquityTerrainVolume_setVoxel());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityTerrainVolume_getVoxel(), "getVoxel"); // 1780782443
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityTerrainVolume_pickSurface(), "pickSurface"); // 3647256830
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityTerrainVolume_sculptTerrain(), "sculptTerrain"); // 3169560153
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ACubiquityTerrainVolume_setVoxel(), "setVoxel"); // 2704155038
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CubiquityTerrainVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CubiquityTerrainVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A voxel terrain object that uses marching cubes"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACubiquityTerrainVolume(Z_Construct_UClass_ACubiquityTerrainVolume, &ACubiquityTerrainVolume::StaticClass, TEXT("ACubiquityTerrainVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACubiquityTerrainVolume);
	UPackage* Z_Construct_UPackage__Script_Cubiquity()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Cubiquity")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x5A3DA5B9;
			Guid.B = 0x936334D2;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
